sections:
  - name: "MCP Explained"
    slides:
      - id: mcp_1
        title: "What is MCP? Model Context Protocol"
        narration: |
          MCP is the "how" between user intent and service implementation
          It defines a standard format for services to describe themselves
          LLM reads MCP definitions
          LLM understands what services can do
          LLM can ONLY call what's defined in MCP
          Hallucination prevention built-in.
        duration: 25
        content_type: "diagram"
        content: |
          MCP: The Translation Layer
          ═════════════════════════════
          
          ┌──────────────┐
          │   User       │
          │  "Show me    │
          │   laptops"   │
          └──────┬───────┘
                 │
                 ↓
          ┌─────────────────────────┐
          │   LLM (with context)    │
          │   "I can understand     │
          │    natural language"    │
          └──────────┬──────────────┘
                     │
                     ↓
          ┌─────────────────────────┐
          │   MCP Definition        │
          │   "These tools exist"   │
          │   "These parameters"    │
          │   "These responses"     │
          └──────────┬──────────────┘
                     │
                     ↓
          ┌─────────────────────────┐
          │   Service Call          │
          │   (guaranteed correct)  │
          └─────────────────────────┘
      
      - id: mcp_2
        title: "MCP Prevents Hallucination"
        narration: |
          Hallucination: LLM invents function names
          Hallucination: LLM invents parameters
          Hallucination: LLM invents response formats
          With MCP: Only possible operations defined
          With MCP: Only valid parameters accepted
          With MCP: Response validation enforced
          This is revolutionary.
        duration: 25
        content_type: "text"
        content: |
          HALLUCINATION BEFORE MCP
          ════════════════════════
          
          User: "Get me wireless headphones"
          
          ❌ LLM might try:
          • search_for_products() ← function doesn't exist!
          • product_search() ← close but wrong!
          • SearchProduct(headphones) ← syntax wrong!
          • get_all_products() ← wrong parameters!
          
          Result: System error, user frustrated
          
          SAFETY WITH MCP
          ═══════════════
          
          User: "Get me wireless headphones"
          
          ✅ MCP defines exactly:
          • search_products() ← ONLY valid function
          • parameters: query (string), filter (enum)
          • response: ProductList (validated schema)
          
          Result: Guaranteed correct, every time
