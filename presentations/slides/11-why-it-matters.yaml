sections:
  - name: "Why It Matters"
    slides:
      - id: why_1
        title: "Impact: Speed to Market"
        narration: |
          Traditional: Months to build UI
          AI-Native: Days to add intent
          Faster innovation
          Competitive advantage
          Business impact
        duration: 25
        content_type: "text"
        content: |
          TIME TO MARKET COMPARISON
          ════════════════════════
          
          TRADITIONAL UI DEVELOPMENT
          ────────────────────────
          
          New Feature Request: "Wish list comparison"
          
          Week 1: Design UI mockups
          ├─ 2-3 days design work
          ├─ Stakeholder reviews
          └─ Iterations
          
          Week 2-3: Frontend development
          ├─ Build React components
          ├─ Styling & responsive design
          ├─ State management
          └─ Testing
          
          Week 4: Backend integration
          ├─ API endpoint development
          ├─ Database queries
          ├─ Performance optimization
          └─ Error handling
          
          Week 5: Testing & QA
          ├─ Manual testing
          ├─ Edge case handling
          ├─ Cross-browser testing
          └─ Performance testing
          
          Timeline: 4-5 WEEKS
          Resources: 2-3 engineers
          
          ─────────────────────────────
          
          AI-NATIVE APPROACH
          ──────────────────
          
          New Intent Request: "Add wish list comparison"
          
          Day 1: Add to MCP definition
          ├─ Define COMPARE_WISHLIST intent
          ├─ Define parameters
          └─ Define response schema
          
          Day 2: Test coverage
          ├─ Write test cases
          ├─ Validate MCP
          └─ Manual testing
          
          Timeline: 1-2 DAYS
          Resources: 1 engineer
          
          ──────────────────────────────
          
          EFFICIENCY GAIN: 20-25x FASTER ✓
      
      - id: why_2
        title: "Impact: Scalability"
        narration: |
          Add new services easily
          New intents automatically
          No UI changes needed
          System grows organically
          Infrastructure ready
        duration: 25
        content_type: "diagram"
        content: |
          SCALABILITY IMPROVEMENT
          ═══════════════════════
          
          Traditional Architecture:
          ┌──────────────────┐
          │  Web UI           │
          └───────┬───────────┘
                  │ tightly coupled
                  ↓
          ┌──────────────────┐
          │  API Gateway     │
          └───────┬───────────┘
                  │
          ┌───────┼───────┐
          ↓       ↓       ↓
          [Service1] [Service2] [Service3]
          
          Adding New Service = Redesign UI ✗
          
          ──────────────────────────────
          
          AI-Native Architecture:
          ┌──────────────────┐
          │  LLM Layer       │
          │  (Intelligent)   │
          └───────┬───────────┘
                  │ loosely coupled
                  ↓
          ┌──────────────────┐
          │  Intent Router   │
          │  (MCP-aware)     │
          └───────┬───────────┘
                  │
          ┌───────┼───────┬───────┐
          ↓       ↓       ↓       ↓
          [S1]  [S2]   [S3]   [S4] ← NEW!
          
          Adding New Service = Add to MCP ✓
          UI adapts automatically ✓
          
          Scaling Characteristics:
          • Linear cost increase
          • No UI redesign needed
          • LLM automatically routes
          • Tests run automatically
          • Rollout in hours
